name: Build & Deploy iOS

on:
  push:
    branches:
      - main  # Exécute l’action à chaque push sur la branche main

jobs:
  build:
    runs-on: macos-latest  # Utilisation d'un environnement macOS g

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.27.3  # Mets ta version de Flutter ici
          cache: true

      - name: Install dependencies
        run: flutter pub get


      - name: Force iOS 13+ in Podfiles
        run: |
          cd ios
          sed -i -e 's/^# *platform :ios, .*/platform :ios, "14.0"/' Podfile || echo 'platform :ios, "14.0"' >> Podfile
          cat Podfile  # Affiche le fichier Podfile pour vérification
          cd ..
          

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod init || true
          pod repo update
          pod install --verbose
          cd ..

      - name: Decode provisioning profile
        run: |
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mv profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Import certificate
        run: |
          echo "${{ secrets.IOS_CERTIFICATE_BASE64 }}" | base64 --decode > certificate.p12
          file certificate.p12  # Vérifier que c'est bien un fichier P12
          
          # Créer et configurer le keychain
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          
          # Importer le certificat avec debug activé
          security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -A -T /usr/bin/codesign -T /usr/bin/security || cat certificate.p12
          
          # Lister les certificats pour vérifier l'importation
          security list-keychains -s build.keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain


    
      - name: Create Firebase Service Account JSON
        run: |
            mkdir -p assets/credentials
            echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > assets/credentials/service_account_key.json
      
  
      - name: Inject Provisioning Profile in Xcode Project
        run: |
          if grep -q "isa = PBXProject;" ios/Runner.xcodeproj/project.pbxproj; then
            sed -i '' 's/isa = PBXProject;/isa = PBXProject; PROVISIONING_PROFILE_SPECIFIER = "profile.mobileprovision";/' ios/Runner.xcodeproj/project.pbxproj
          else
            echo "Erreur: PBXProject non trouvé dans project.pbxproj"
          fi
          cat ios/Runner.xcodeproj/project.pbxproj | grep PROVISIONING_PROFILE_SPECIFIER

      
      - name: Set Development Team in Xcode project
        run: |
            cd ios
            xcodebuild -project Runner.xcodeproj -target Runner -configuration Release \
            CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=9PW89SQJ4U
            cd ..
            
        
      - name: Inject Development Team in Xcode project
        run: |
            sed -i '' 's/DEVELOPMENT_TEAM = ""; /DEVELOPMENT_TEAM = "9PW89SQJ4U"; /g' ios/Runner.xcodeproj/project.pbxproj
            cat ios/Runner.xcodeproj/project.pbxproj | grep DEVELOPMENT_TEAM

      - name: Build iOS
        run: flutter build ipa --release

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Build
          path: build/ios/ipa/
